import { Heart, Flower, Snowflake, Sparkles, MousePointer2, Smartphone, Download, CircleDollarSign, Menu, Users, CheckSquare, Ticket, PenSquare, Camera, User } from 'lucide-react';

// Define frame options with specific image positioning
export const flowerFrames = [
  { 
    id: '1', 
    path: '/images/flower-frame/1.png', 
    name: 'Blush Flower',
    imageSize: 'w-[85%] h-[85%]', 
    imagePosition: 'translate-x-0 translate-y-0' 
  },
  { 
    id: '2', 
    path: '/images/flower-frame/2.png', 
    name: 'Sage Flower',
    imageSize: 'w-[85%] h-[85%]', 
    imagePosition: 'translate-x-0 translate-y-2' 
  },
  { 
    id: '3', 
    path: '/images/flower-frame/3.png', 
    name: 'Rose Gold Flower',
    imageSize: 'w-[75%] h-[75%]', 
    imagePosition: 'translate-x-0 translate-y-0' 
  },
  { 
    id: '4', 
    path: '/images/flower-frame/4.png', 
    name: 'Lavender Flower',
    imageSize: 'w-[85%] h-[90%]', 
    imagePosition: 'translate-x-0 translate-y-1' 
  },
  { 
    id: '5', 
    path: '/images/flower-frame/5.png', 
    name: 'Peach Flower',
    imageSize: 'w-[85%] h-[85%]', 
    imagePosition: 'translate-x-0 translate-y-0' 
  }
];

// Define theme options with wedding-appropriate colors and text colors
export const colorThemes = [
  {
    id: 'blush',
    name: 'Blush & Lavender',
    gradientFrom: 'from-pink-200',
    gradientVia: 'via-purple-100',
    gradientTo: 'to-indigo-200',
    startColor: '#fad1e6', 
    endColor: '#d6d3f0',   
    textColor: 'text-rose-800',
    buttonClass: 'bg-pink-500/20 hover:bg-pink-500/30 border-pink-500/50 text-rose-800'
  },
  {
    id: 'sage',
    name: 'Sage & Cream',
    gradientFrom: 'from-green-100',
    gradientVia: 'via-emerald-50',
    gradientTo: 'to-teal-100',
    startColor: '#e3f1ea', 
    endColor: '#e6f7f4',   
    textColor: 'text-rose-800',
    buttonClass: 'bg-green-500/20 hover:bg-green-500/30 border-green-500/50 text-rose-800'
  },
  {
    id: 'rose',
    name: 'Rose & Gold',
    gradientFrom: 'from-rose-100',
    gradientVia: 'via-amber-50',
    gradientTo: 'to-yellow-100',
    startColor: '#fde4e4', 
    endColor: '#fef3c7',   
    textColor: 'text-rose-800',
    buttonClass: 'bg-rose-500/20 hover:bg-rose-500/30 border-rose-500/50 text-rose-800'
  },
  {
    id: 'lavender',
    name: 'Lavender & Sky',
    gradientFrom: 'from-purple-100',
    gradientVia: 'via-indigo-50',
    gradientTo: 'to-blue-100',
    startColor: '#e9e4f9', 
    endColor: '#dbeafe',   
    textColor: 'text-rose-800',
    buttonClass: 'bg-purple-500/20 hover:bg-purple-500/30 border-purple-500/50 text-rose-800'
  },
  {
    id: 'peach',
    name: 'Peach & Ivory',
    gradientFrom: 'from-orange-100',
    gradientVia: 'via-amber-50',
    gradientTo: 'to-yellow-50',
    startColor: '#feeadd', 
    endColor: '#fefce8',   
    textColor: 'text-rose-800',
    buttonClass: 'bg-orange-500/20 hover:bg-orange-500/30 border-orange-500/50 text-rose-800'
  },
  {
    id: 'mint',
    name: 'Mint & Pearl',
    gradientFrom: 'from-emerald-100',
    gradientVia: 'via-teal-50',
    gradientTo: 'to-cyan-50',
    startColor: '#d1fae5', 
    endColor: '#ecfeff',   
    textColor: 'text-rose-800',
    buttonClass: 'bg-emerald-500/20 hover:bg-emerald-500/30 border-emerald-500/50 text-rose-800'
  },
  {
    id: 'coral',
    name: 'Coral & Sand',
    gradientFrom: 'from-red-100',
    gradientVia: 'via-orange-50',
    gradientTo: 'to-amber-50',
    startColor: '#fee2e2', 
    endColor: '#fffbeb',   
    textColor: 'text-rose-800',
    buttonClass: 'bg-red-500/20 hover:bg-red-500/30 border-red-500/50 text-rose-800'
  },
  {
    id: 'ocean',
    name: 'Ocean & Mist',
    gradientFrom: 'from-blue-100',
    gradientVia: 'via-sky-50',
    gradientTo: 'to-cyan-50',
    startColor: '#dbeafe', 
    endColor: '#ecfeff',   
    textColor: 'text-rose-800',
    buttonClass: 'bg-blue-500/20 hover:bg-blue-500/30 border-blue-500/50 text-rose-800'
  }
];

// Define effects options with matching cursors
export const effectOptions = [
  { 
    id: 'none', 
    name: 'No Effects', 
    icon: MousePointer2, 
    emoji: '',
    cursorClass: 'cursor-default',
    particleCount: 0,
    particleSpeed: 0,
    sway: 0,
    maxSize: 0
  },
  { 
    id: 'hearts', 
    name: 'Floating Hearts', 
    icon: Heart, 
    emoji: '‚ù§Ô∏è',
    cursorClass: 'cursor-heart',
    particleCount: 30,
    particleSpeed: 2.5,
    sway: 1.2,
    maxSize: 15
  },
  { 
    id: 'flowers', 
    name: 'Flower Petals', 
    icon: Flower, 
    emoji: 'üå∏',
    cursorClass: 'cursor-flower',
    particleCount: 25,
    particleSpeed: 1.8,
    sway: 2,
    maxSize: 20
  },
  { 
    id: 'snow', 
    name: 'Falling Snowflakes', 
    icon: Snowflake, 
    emoji: '‚ùÑÔ∏è',
    cursorClass: 'cursor-default',
    particleCount: 35,
    particleSpeed: 1.5,
    sway: 0.7,
    maxSize: 18
  },
  { 
    id: 'sparkles', 
    name: 'Magical Sparkles', 
    icon: Sparkles, 
    emoji: '‚ú®',
    cursorClass: 'cursor-ring',
    particleCount: 40,
    particleSpeed: 2.2,
    sway: 1.5,
    maxSize: 16
  },
];

// Template options
export const templates = [
  {
    id: "default",
    name: "Template M·∫∑c ƒë·ªãnh",
    image: "/images/templates/default.png",
  },
  {
    id: "elegant",
    name: "Elegant",
    image: "/images/templates/elegant.png",
  },
  {
    id: "modern",
    name: "Modern",
    image: "/images/templates/modern.png",
  },
  {
    id: "minimalist",
    name: "Minimalist",
    image: "/images/templates/minimalist.png",
  },
  {
    id: "classic",
    name: "Classic",
    image: "/images/templates/classic.png",
  },
];

// Consolidated color options - merging both representations
export const colorOptions = [
  {
    id: "blush",
    name: "H·ªìng Blush",
    value: "#fad1e6",
    displayName: "Blush & Lavender"
  },
  {
    id: "sage",
    name: "Xanh Sage",
    value: "#e3f1ea",
    displayName: "Sage & Cream"
  },
  {
    id: "rose",
    name: "H·ªìng Rose Gold",
    value: "#fde4e4",
    displayName: "Rose & Gold"
  },
  {
    id: "lavender",
    name: "T√≠m Lavender",
    value: "#e9e4f9",
    displayName: "Lavender & Sky"
  },
  {
    id: "peach",
    name: "ƒê√†o Peach",
    value: "#feeadd",
    displayName: "Peach & Ivory"
  },
  {
    id: "custom",
    name: "M√†u t√πy ch·ªânh",
    value: "",
    displayName: "Custom Color"
  },
];

// Consolidated flower frame options - mapping both numeric and string IDs
export const flowerFrameOptions = [
  { 
    id: 'rose',
    name: 'Blush Flower',
    image: '/images/flower-frame/1.png',
    imageSize: 'w-[85%] h-[85%]', 
    imagePosition: 'translate-x-0 translate-y-0'
  },
  { 
    id: 'sage',
    name: 'Sage Flower',
    image: '/images/flower-frame/2.png',
    imageSize: 'w-[85%] h-[85%]', 
    imagePosition: 'translate-x-0 translate-y-2'
  },
  { 
    id: 'gold',
    name: 'Rose Gold Flower',
    image: '/images/flower-frame/3.png',
    imageSize: 'w-[75%] h-[75%]', 
    imagePosition: 'translate-x-0 translate-y-0'
  },
  { 
    id: 'lavender',
    name: 'Lavender Flower',
    image: '/images/flower-frame/4.png',
    imageSize: 'w-[85%] h-[90%]', 
    imagePosition: 'translate-x-0 translate-y-1'
  },
  { 
    id: 'peach',
    name: 'Peach Flower',
    image: '/images/flower-frame/5.png',
    imageSize: 'w-[85%] h-[85%]', 
    imagePosition: 'translate-x-0 translate-y-0'
  }
];

// Map flower frame options between different ID formats
export const flowerFrameMapping = {
  'rose': '1',
  'sage': '2',
  'gold': '3',
  'lavender': '4',
  'peach': '5'
};

// Reverse mapping (numeric to string ID)
export const reverseFlowerFrameMapping = {
  '1': 'rose',
  '2': 'sage',
  '3': 'gold',
  '4': 'lavender',
  '5': 'peach'
};

// Matching color suggestions for each frame
export const frameSuggestions: Record<string, string[]> = {
  '1': ['blush', 'lavender'],
  '2': ['sage', 'peach'],
  '3': ['rose', 'peach'],
  '4': ['lavender', 'blush'],
  '5': ['peach', 'rose']
};

// Update vip price constants
export const VIP_PRICES = {
  TEMPLATE: 0, // 150,000 VND
  FLOWER_FRAME: 0, // 100,000 VND
  COLOR: 0, // 50,000 VND
  MUSIC: 0, // 200,000 VND per song
  EFFECT: 0, // 120,000 VND for special effects
};

// Helper functions for template display
export const getTemplateName = (templateId: string = 'default') => {
  const templates: Record<string, string> = {
    'default': 'M·∫´u C∆° B·∫£n',
    'elegant': 'M·∫´u Thanh L·ªãch',
    'modern': 'M·∫´u Hi·ªán ƒê·∫°i',
    'minimalist': 'M·∫´u T·ªëi Gi·∫£n',
    'classic': 'M·∫´u C·ªï ƒêi·ªÉn'
  };
  return templates[templateId] || 'M·∫´u T√πy Ch·ªânh';
};

export const getColorName = (colorId: string = 'blush') => {
  const colors: Record<string, string> = {
    'blush': 'H·ªìng Ph·∫•n',
    'sage': 'Xanh L√° Nh·∫°t',
    'rose': 'H·ªìng ƒê·ªè & V√†ng Gold',
    'lavender': 'T√≠m Lavender',
    'peach': 'ƒê√†o & Ng√†'
  };
  return colors[colorId] || 'M√†u T√πy Ch·ªânh';
};

export const getFrameName = (frameId: string = 'rose') => {
  const frames: Record<string, string> = {
    'rose': 'Hoa H·ªìng',
    'sage': 'Hoa L√° Xanh',
    'gold': 'Hoa V√†ng Gold',
    'lavender': 'Hoa O·∫£i H∆∞∆°ng',
    'peach': 'Hoa ƒê√†o'
  };
  return frames[frameId] || 'Khung T√πy Ch·ªânh';
};

// Function to determine text color based on background color brightness
export const getTextColorForBackground = (color: string): string => {
  const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(color);
  if (!result) return 'text-gray-800';
  
  const r = parseInt(result[1], 16);
  const g = parseInt(result[2], 16);
  const b = parseInt(result[3], 16);
  
  const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;
  return luminance > 0.6 ? 'text-gray-800' : 'text-white';
};

// Function to determine button styling based on background color
export const getButtonClassForBackground = (color: string): string => {
  const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(color);
  if (!result) return 'bg-white/20 hover:bg-white/30 border-white/50 text-white';
  
  const r = parseInt(result[1], 16);
  const g = parseInt(result[2], 16);
  const b = parseInt(result[3], 16);
  
  const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;
  
  return luminance > 0.6
    ? `bg-gray-500/10 hover:bg-gray-500/20 border-gray-500/30 text-gray-800`
    : `bg-white/20 hover:bg-white/30 border-white/50 text-white`;
};

// Navigation items configuration
export const navItems = [
  { id: 'hero', label: 'Trang Ch·ªß' },
  { id: 'video', label: 'Video C∆∞·ªõi' },
  { id: 'album', label: 'Album ·∫¢nh' },
  { id: 'calendar', label: 'L·ªãch Tr√¨nh' },
  { id: 'story', label: 'Chuy·ªán T√¨nh Y√™u' },
  { id: 'bridegroom', label: 'C√¥ D√¢u & Ch√∫ R·ªÉ' },
  { id: 'events', label: 'S·ª± Ki·ªán' },
  { id: 'rsvp', label: 'X√°c Nh·∫≠n Tham D·ª±' },
  { id: 'wishes', label: 'S·ªï L∆∞u B√∫t' },
  { id: 'gift', label: 'M·ª´ng C∆∞·ªõi' }
];

// Default music playlist
export const defaultMusic = [
  { url: '/sounds/leduong.mp3', title: 'L√™ ƒê∆∞·ªùng' },
  { url: '/sounds/Canon in D.mp3', title: 'Canon in D' }
];

// Page type definitions
export type PageType = 'wedding' | 'landing' | 'dashboard' | 'create' | 'other' | 'auth';

// Define pages and their actions
export const pages: { 
  type: PageType; 
  pattern: RegExp; 
  icon: React.ElementType;
  actions?: { 
    id: string; 
    label: string; 
    icon: React.ElementType;
    onClick?: () => void;
  }[];
}[] = [
  {
    type: 'wedding',
    pattern: /^\/(?!landing|create|dashboard|auth).*$/,
    icon: Heart,
  },
  {
    type: 'landing',
    pattern: /^\/landing(\/.*)?$/,
    icon: Smartphone,
    actions: [
      { 
        id: 'download-app', 
        label: 'T·∫£i ·ª©ng d·ª•ng', 
        icon: Download 
      },
      { 
        id: 'features', 
        label: 'T√≠nh nƒÉng', 
        icon: Sparkles 
      },
      { 
        id: 'pricing', 
        label: 'B√°o gi√°', 
        icon: CircleDollarSign 
      }
    ]
  },
  {
    type: 'dashboard',
    pattern: /^\/dashboard(\/.*)?$/,
    icon: Menu,
    actions: [
      { 
        id: 'invites', 
        label: 'Qu·∫£n l√Ω kh√°ch m·ªùi', 
        icon: Users 
      },
      { 
        id: 'budget', 
        label: 'Ng√¢n s√°ch', 
        icon: CircleDollarSign 
      },
      { 
        id: 'tasks', 
        label: 'C√¥ng vi·ªác', 
        icon: CheckSquare 
      },
      { 
        id: 'settings', 
        label: 'C√†i ƒë·∫∑t', 
        icon: Ticket 
      }
    ]
  },
  {
    type: 'create',
    pattern: /^\/create(\/.*)?$/,
    icon: PenSquare,
    actions: [
      { 
        id: 'templates', 
        label: 'M·∫´u thi·ªáp', 
        icon: Ticket 
      },
      { 
        id: 'themes', 
        label: 'Giao di·ªán', 
        icon: Sparkles 
      },
      { 
        id: 'preview', 
        label: 'Xem tr∆∞·ªõc', 
        icon: Camera 
      }
    ]
  },
  {
    type: 'auth',
    pattern: /^\/auth(\/.*)?$/,
    icon: User
  }
]; 

export const defaultAlbumImages = [
  {
    id: "1",
    url: "/images/album/1.jpg",
    alt: "Wedding photo"
  },
  {
    id: "2",
    url: "/images/album/2.jpg",
    alt: "Wedding photo"
  },
  {
    id: "3",
    url: "/images/album/3.jpg",
    alt: "Wedding photo"
  },
  {
    id: "4",
    url: "/images/album/4.jpg",
    alt: "Wedding photo"
  },
  {
    id: "5",
    url: "/images/album/5.jpg",
    alt: "Wedding photo"
  },
  {
    id: "7",
    url: "/images/album/7.jpg",
    alt: "Wedding photo"
  },
  {
    id: "8",
    url: "/images/album/8.jpg",
    alt: "Wedding photo"
  },
  {
    id: "9",
    url: "/images/album/9.jpg",
    alt: "Wedding photo"
  },
  {
    id: "10",
    url: "/images/album/10.jpg",
    alt: "Wedding photo"
  },
];

export const defaultEvents = [
  {
    id: '1',
    title: 'L·ªÖ C∆∞·ªõi Nh√† G√°i',
    description: 'L·ªÖ c∆∞·ªõi t·∫°i nh√† g√°i v·ªõi s·ª± tham gia c·ªßa gia ƒë√¨nh, h·ªç h√†ng v√† b·∫°n b√®.',
    time: '8:00 AM',
    location: 'Nh√† G√°i',
    address: '123 ƒê∆∞·ªùng L√™ L·ª£i, Qu·∫≠n 1, TP HCM',
    mapLink: 'https://maps.google.com',
    image: '/images/wedding-female.jpg'
  },
  {
    id: '2',
    title: 'L·ªÖ C∆∞·ªõi Nh√† Trai',
    description: 'L·ªÖ c∆∞·ªõi t·∫°i nh√† trai v·ªõi s·ª± tham gia c·ªßa gia ƒë√¨nh, h·ªç h√†ng v√† b·∫°n b√®.',
    time: '11:00 AM',
    location: 'Nh√† Trai',
    address: '456 ƒê∆∞·ªùng Nguy·ªÖn Hu·ªá, Qu·∫≠n 1, TP HCM',
    mapLink: 'https://maps.google.com',
    image: '/images/wedding-male.jpg'
  },
  {
    id: '3',
    title: 'Ti·ªác C∆∞·ªõi',
    description: 'Ti·ªác c∆∞·ªõi v·ªõi ƒë·∫ßy ƒë·ªß gia ƒë√¨nh, h·ªç h√†ng v√† b·∫°n b√® hai b√™n.',
    time: '6:00 PM',
    location: 'Trung T√¢m Ti·ªác C∆∞·ªõi',
    address: '789 ƒê∆∞·ªùng L√™ Du·∫©n, Qu·∫≠n 1, TP HCM',
    mapLink: 'https://maps.google.com',
    image: '/images/wedding-reception.jpg'
  }
];

export const defaultAccounts = [
  {
    id: "1",
    bankName: "Ng√¢n h√†ng TMCP Ngo·∫°i th∆∞∆°ng Vi·ªát Nam (Vietcombank)",
    accountNumber: "1234567890",
    accountName: "NGUYEN VAN A",
    qrCode: "/images/qr-sample.png"
  },
  {
    id: "2",
    bankName: "Ng√¢n h√†ng TMCP C√¥ng Th∆∞∆°ng Vi·ªát Nam (VietinBank)",
    accountNumber: "0987654321",
    accountName: "TRAN THI B",
    qrCode: "/images/qr-sample2.png"
  }
];

export const defaultStoryEvents = [
  {
    id: "1",
    date: "01/01/2020",
    title: "L·∫ßn ƒë·∫ßu g·∫∑p g·ª°",
    description:
      "Ch√∫ng t√¥i g·∫∑p nhau l·∫ßn ƒë·∫ßu ti√™n t·∫°i m·ªôt bu·ªïi ti·ªác c·ªßa b·∫°n chung. ƒê√≥ l√† m·ªôt kho·∫£nh kh·∫Øc ƒë·∫∑c bi·ªát m√† c·∫£ hai kh√¥ng th·ªÉ n√†o qu√™n.",
    image: "/images/story-1.jpg",
  },
  {
    id: "2",
    date: "15/06/2020",
    title: "H·∫πn h√≤ ƒë·∫ßu ti√™n",
    description:
      "Bu·ªïi h·∫πn h√≤ ƒë·∫ßu ti√™n c·ªßa ch√∫ng t√¥i t·∫°i m·ªôt qu√°n c√† ph√™ nh·ªè. Ch√∫ng t√¥i ƒë√£ n√≥i chuy·ªán su·ªët nhi·ªÅu gi·ªù v√† kh√¥ng mu·ªën k·∫øt th√∫c bu·ªïi h·∫πn.",
    image: "/images/story-2.jpg",
  },
  {
    id: "3",
    date: "25/12/2021",
    title: "C·∫ßu h√¥n",
    description:
      "D∆∞·ªõi √°nh n·∫øn lung linh v√† b·∫ßu tr·ªùi ƒë·∫ßy sao, anh ƒë√£ qu·ª≥ g·ªëi c·∫ßu h√¥n. V√† t·∫•t nhi√™n, c√¢u tr·∫£ l·ªùi l√† 'C√≥!'",
    image: "/images/story-3.jpg",
  },
  {
    id: "4",
    date: "04/12/2023",
    title: "Ng√†y c∆∞·ªõi",
    description:
      "Ng√†y tr·ªçng ƒë·∫°i c·ªßa ch√∫ng t√¥i - khi ch√∫ng t√¥i trao l·ªùi th·ªÅ nguy·ªán v√† b·∫Øt ƒë·∫ßu cu·ªôc s·ªëng m·ªõi c√πng nhau.",
    image: "/images/story-4.jpg",
  },
];

// Default sections configuration for template structure
export const defaultSections = [
  { id: "hero", name: "·∫¢nh b√¨a", enabled: true, order: 0 },
  { id: "video", name: "Video c∆∞·ªõi", enabled: true, order: 1 },
  { id: "album", name: "Album ·∫£nh", enabled: true, order: 2 },
  { id: "calendar", name: "L·ªãch tr√¨nh", enabled: true, order: 3 },
  { id: "story", name: "Chuy·ªán t√¨nh y√™u", enabled: true, order: 4 },
  { id: "bridegroom", name: "C√¥ d√¢u & Ch√∫ r·ªÉ", enabled: true, order: 5 },
  { id: "events", name: "S·ª± ki·ªán", enabled: true, order: 6 },
  { id: "wishes", name: "S·ªï l∆∞u b√∫t", enabled: true, order: 7 },
  { id: "gift", name: "M·ª´ng c∆∞·ªõi", enabled: true, order: 8 },
];

// Map of default icons for each section
export const defaultIconMap = {
  hero: 'Image',
  video: 'Video', 
  album: 'Album',
  calendar: 'Calendar',
  story: 'BookHeart',
  bridegroom: 'Users',
  events: 'Calendar',
  wishes: 'MessageSquare',
  gift: 'Gift',
};